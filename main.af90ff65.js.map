{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","reject","addEventListener","nodeName","id","printMessage","message","body","document","querySelector","div","createElement","className","innerHTML","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GAUjB,OAAA,IAAIC,QATM,SAACC,EAASC,GACzBJ,EAAQK,iBAAoBJ,GAAAA,OAAAA,GAAa,WACvCE,EAAkBF,UAAAA,OAAAA,EACdD,8BAAAA,OAAAA,EAAQM,SACJN,mBAAAA,OAAAA,EAAQO,GAFhB,UAUN,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAOC,SAASC,cAAc,QAC9BC,EAAMF,SAASG,cAAc,OAEnCD,EAAIE,UAAY,UAChBF,EAAIG,UAAYP,EAChBC,EAAKO,OAAOJ,IAGdK,OAAOC,QAAU,CACfpB,QAAAA,EACAS,aAAAA","file":"main.af90ff65.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  const resolver = (resolve, reject) => {\n    element.addEventListener(`${eventName}`, () => {\n      resolve(`It was ${eventName} on the element:\n        ${element.nodeName},\n        id: ${element.id}.`\n      );\n    });\n  };\n\n  return new Promise(resolver);\n}\n\nconst printMessage = (message) => {\n  const body = document.querySelector('body');\n  const div = document.createElement('div');\n\n  div.className = 'message';\n  div.innerHTML = message;\n  body.append(div);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}